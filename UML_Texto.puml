@startuml
hide empty methods
hide empty fields

skinparam legendBackgroundColor #ffffff
legend

|= field |= method |=  |
|  <img:http://s.plantuml.com/private-field.png>     |   <img:http://s.plantuml.com/private-method.png>     | private |
|  <img:http://s.plantuml.com/protected-field.png>   |   <img:http://s.plantuml.com/protected-method.png>   | protected |
|  <img:http://s.plantuml.com/package-private-field.png>     |   <img:http://s.plantuml.com/package-private-method.png>    | package private |
|  <img:http://s.plantuml.com/public-field.png>     |   <img:http://s.plantuml.com/public-method.png>     | public |

endlegend


class AppExpendedor {
  {method} {static} + main(String[]) : void
}

interface Observador {
  {method} cambioModelo() : void
}

class Controlador

package "modelos" {
  class Expendedor {
    {field} - CAPACIDAD : int
    {field} - primerNumSerie : int
    {method} + getVuelto() : Moneda
    {method} + comprarProducto(Moneda, Catalogo) : Producto
    {method} + rellenar() : void
    {method} + getDepositoProducto(Catalogo) : Deposito<Producto>
    {method} + getDepositosProducto() : ArrayList<Deposito<Producto>>
    {metohd} + getDepVuelto() : Deposito<Moneda>
    {method} + peekVuelto() : Moneda[]
    {method} + getCompra() : Producto
    {method} + peekCompra() : Producto
  }
  class Deposito<T> {
      {method} + addObjeto(T) : void 
      {method} + getObjeto() : T
      {method} + cuantosObjetos() : int
      {method} + peekObjeto(int) : T
  }
  abstract Moneda implements Comparable {
    {method} {abstract} + getValor() : int
    {method} + getSerie() : String
  }
  abstract Producto {
      {field} - serie : String
      {method} {abstract} + consumir() : String
      {method} + getSerie() : String
  }
  abstract Bebida {
  }
  abstract Dulce {
  }
  enum Catalogo {
      {field} - precio : int
      {field} - tipo : Class
      {field} - nombre : String
      {field} - pathSprite : String
      {method} + getPrecio() : int
      {method} + precioAsString() : String
      {method} + setPrecio(int) : void
      {method} + getTipo() : Class
      {method} + getNombre() : String
      {method} + getPathSprite() : String
      {method} {static} + getAllNombres() : String[]
      {method} {static} + matchNombre(String) : Catalogo
      {method} {static} + matchTipo(Class) : Catalogo
      {method} + newInstance(String) : Producto
  }
  enum EnumMoneda {
    {field} - valor : int
    {field} - tipo : Class
    {field} - nombre : String
    {method} + getValor() : int
    {method} + getNombre() : String
    {method} {static} + getAllNombres() : String[]
    {method} {static} + matchNombre(String) : EnumMoneda
    {method} + newInstance() : Moneda
  }

  class Moneda1500
  class Moneda1000
  class Moneda500
  class Moneda100

  class CocaCola
  class Sprite
  class Fanta

  class Snickers
  class Super8
}

package "vistas" {
  class VentanaApp 
  class PanelPrincipal
  class PanelExpendedor 
  class PanelDeposito<T> {
    {field} - type : Class<T>
    {field} ~ width : int
    {field} ~ height : int
    {method} - addComponents() : void
  }
  class LabelProducto 
  class PanelMoneda {
    {method} - truncatedSerie() : String
    {method} - valorAsString() : String
  }
  class TextoSimple
  class PanelBotones
  class SeleccionMultiple {
    {method} + getSelected() : JRadioButton
    {method} + getButtons() : JRadioButton[]
  }
  class PanelRetiro 
  class PanelRetiroProducto 
  class PanelRetiroVuelto
}

package "Swing" {
  class JFrame
  class JPanel
  class JLabel
  class JButton
  class JRadioButton
  class ButtonGroup
}

' Dependencias
Expendedor ..> Producto
Expendedor ..> Moneda
Expendedor ..> Catalogo

PanelBotones ..> EnumMoneda
PanelBotones ..> Moneda
PanelBotones ..> Catalogo

PanelRetiroVuelto ..> Moneda
PanelRetiroProducto ..> Producto

PanelExpendedor ..> Controlador
PanelBotones ..> Controlador
PanelRetiroVuelto ..> Controlador
PanelRetiro ..> Controlador

' Asociaciones y Agregaciones
Expendedor o-- Deposito
Expendedor o-- Producto

AppExpendedor o-- Expendedor
VentanaApp o-- PanelPrincipal

PanelPrincipal o-- PanelExpendedor
PanelPrincipal o-- PanelBotones

PanelExpendedor o-- Expendedor
PanelExpendedor o-- PanelDeposito

PanelBotones o-- PanelMoneda
PanelBotones o-- PanelRetiro

PanelRetiroVuelto o-- PanelMoneda
PanelRetiroProducto o-- LabelProducto

PanelDeposito o-- PanelMoneda
PanelDeposito o-- LabelProducto

PanelMoneda o-- Moneda
LabelProducto o-- Producto
PanelDeposito o-- Deposito


' Composiciones
AppExpendedor *-- VentanaApp

Controlador *-- PanelRetiro
Controlador *-- PanelExpendedor
Controlador *-- Expendedor

PanelRetiro *-- PanelRetiroProducto
PanelRetiro *-- PanelRetiroVuelto

' Herencias Producto
Producto <|-- Bebida
Producto <|-- Dulce
Bebida <|-- CocaCola
Bebida <|-- Sprite
Bebida <|-- Fanta 
Dulce <|-- Snickers
Dulce <|-- Super8

' Herencias Moneda
Moneda <|-- Moneda100
Moneda <|-- Moneda500
Moneda <|-- Moneda1000
Moneda <|-- Moneda1500

' Implementaciones
Observador <|.. PanelExpendedor
Observador <|.. PanelRetiro
Observador <|.. PanelRetiroProducto
Observador <|.. PanelRetiroVuelto

' Swing
JFrame <|-- VentanaApp
JPanel <|-- PanelPrincipal

JPanel <|-- PanelExpendedor
PanelExpendedor o-- JButton

JPanel <|-- PanelBotones
PanelBotones o-- JButton
PanelBotones o-- JRadioButton
PanelBotones o-- ButtonGroup

JPanel <|-- PanelRetiro
JPanel <|-- PanelRetiroProducto
JPanel <|-- PanelRetiroVuelto
PanelRetiroVuelto o-- JButton
PanelRetiroProducto o-- JButton

JPanel <|-- PanelMoneda
JLabel <|-- LabelProducto
JPanel <|-- PanelDeposito
JLabel <|-- TextoSimple

JPanel <|-- SeleccionMultiple
SeleccionMultiple o-- JRadioButton
SeleccionMultiple o-- ButtonGroup
@enduml